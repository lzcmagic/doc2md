server {
    listen 80;
    server_name localhost; # 或者你的域名

    # 设置客户端请求体最大大小，以防上传大文件
    client_max_body_size 100M; 

    # 根目录和默认文件（例如 index.html）由前端服务处理
    location / {
        # 将请求转发给前端服务（假设它在容器内监听 80 端口）
        # 如果你的前端容器监听不同端口，请修改这里的 80
        proxy_pass http://frontend:80; 
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # 处理 API 请求
    location /api/ {
        # 将以 /api/ 开头的请求转发给后端服务（假设它在容器内监听 3000 端口）
        # 如果你的后端容器监听不同端口，请修改这里的 3000
        proxy_pass http://backend:3000; # 注意这里没有末尾的 /
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # 可选：如果后端 API 不需要 /api/ 前缀，可以使用 rewrite
        # rewrite ^/api/(.*)$ /$1 break; 
    }

    # 可选：处理 WebSocket 连接（如果需要）
    # location /ws {
    #     proxy_pass http://backend:3000; # 或者你的 WebSocket 服务地址
    #     proxy_http_version 1.1;
    #     proxy_set_header Upgrade $http_upgrade;
    #     proxy_set_header Connection "Upgrade";
    #     proxy_set_header Host $host;
    # }
} 